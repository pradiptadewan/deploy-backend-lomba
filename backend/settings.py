"""
Django settings for backend project.
Generated by 'django-admin startproject' using Django 5.2.4.
"""

import os
from pathlib import Path
import dj_database_url  # RAILWAY: Pastikan import ini ada di atas

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# RAILWAY: Baca SECRET_KEY dari environment variable untuk keamanan.
# Anda harus mengatur variabel ini di dashboard Railway Anda.
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-default-key-for-local-dev')

# RAILWAY: DEBUG akan False di production, kecuali diatur sebaliknya di environment variable.
DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'

# RAILWAY: Konfigurasi host yang diizinkan secara dinamis.
ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
]

# RAILWAY: Secara otomatis menambahkan domain dari Railway jika ada.
RAILWAY_HOSTNAME = os.environ.get('RAILWAY_STATIC_URL')
if RAILWAY_HOSTNAME:
    ALLOWED_HOSTS.append(RAILWAY_HOSTNAME)


# server Next.js
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    # RAILWAY: Tambahkan URL frontend Anda di sini setelah di-deploy.
    # "https://your-frontend-domain.up.railway.app", 
]

# RAILWAY: Tambahkan ini untuk keamanan saat berjalan di HTTPS.
CSRF_TRUSTED_ORIGINS = []
if RAILWAY_HOSTNAME:
    CSRF_TRUSTED_ORIGINS.append(f'https://{RAILWAY_HOSTNAME}')


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'drf_spectacular',
    'corsheaders',
    'ckeditor',
    'api',
]

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ]
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Carbonify API',
    'DESCRIPTION': 'API untuk proyek Carbonify. Menyediakan data untuk kalkulator, aksi nyata, dan peta lokal.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # RAILWAY: Whitenoise middleware untuk menyajikan file statis.
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# RAILWAY: Konfigurasi database untuk menggunakan PostgreSQL dari Railway.
# Ini akan menggunakan DATABASE_URL yang disediakan secara otomatis oleh Railway.
DATABASES = {
    'default': dj_database_url.config(
        conn_max_age=600,
        conn_health_checks=True,
        ssl_require=True,
    )
}
# Jika DATABASE_URL tidak ada (misalnya saat development lokal), kembali ke SQLite.
if not DATABASES['default']:
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / "staticfiles"  # RAILWAY: Arahkan ke folder 'staticfiles'
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

GOOGLE_CLIENT_ID = "713677412866-hsrqjr4f2ph6lneods4b9dc0lael170i.apps.googleusercontent.com"